buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
        maven {
            url = 'https://s01.oss.sonatype.org/content/repositories/releases/'
        }
        maven {
            url = 'https://repo.mattmalec.com/repository/releases'
        }
    }

    dependencies {
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'org.mangorage'
version = '3.0.1'

configurations {
    shadow
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url = uri("https://plugins.gradle.org/m2/")
    }
    maven {
        url = 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }
    maven {
        url = 'https://repo.mattmalec.com/repository/releases'
    }
}

dependencies {
    compileOnly 'org.apache.groovy:groovy:4.0.14'
    compileOnly gradleApi()

    compileOnly 'com.mattmalec:Pterodactyl4J:2.BETA_140'
    compileOnly 'com.google.code.gson:gson:2.10.1'

    shadow 'com.mattmalec:Pterodactyl4J:2.BETA_140'
    shadow 'com.google.code.gson:gson:2.10.1'

}

test {
    useJUnitPlatform()
}

shadowJar {
    configurations = [project.configurations.shadow]
}

publishing {

    publications.register("gradleutils", MavenPublication) {
        artifact shadowJar

        groupId = 'io.github.realmangorage'
        artifactId = 'gradleutils'

        pom {
            name = 'MangoBot GradleUtils'
            description = 'The GradleUtils for my Discord Bot Project'
            url = 'https://github.com/MangoRageBot/MangoBot'
            issueManagement {
                system = 'github'
                url = 'https://github.com/MangoRageBot/MangoBot/issues'
            }
            developers {
                developer {
                    id = 'mangorage'
                    name = 'MangoRage'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/releases/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            group "io.github.mangorage"
            credentials {
                username = findProperty("mango.maven.username")
                password = findProperty("mango.maven.password")
            }
        }
    }
}


jar.dependsOn(shadowJar)
jar.mustRunAfter(shadowJar)
