/*
 * Copyright (c) 2024. MangoRage
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
 * OR OTHER DEALINGS IN THE SOFTWARE.
 */

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url = uri("https://plugins.gradle.org/m2/")
        }
        maven {
            url = 'https://s01.oss.sonatype.org/content/repositories/releases/'
        }
        maven {
            url = 'https://repo.mattmalec.com/repository/releases'
        }
    }

    dependencies {
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'maven-publish'

def getCommitNumber = {
    def proc = 'git rev-list --count master'.execute()
    proc.waitFor()
    return proc.text.trim()
}

group = 'org.mangorage'
version = '3.0.2-beta2208'

configurations {
    shadow
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url = uri("https://plugins.gradle.org/m2/")
    }
    maven {
        url = 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }
    maven {
        url = 'https://repo.mattmalec.com/repository/releases'
    }
}

dependencies {
    compileOnly 'org.apache.groovy:groovy:4.0.14'
    compileOnly gradleApi()

    compileOnly 'com.mattmalec:Pterodactyl4J:2.BETA_140'
    compileOnly 'com.google.code.gson:gson:2.10.1'
    compileOnly 'io.github.realmangorage:installer:2.0.0'

    shadow 'com.mattmalec:Pterodactyl4J:2.BETA_140'
    shadow 'com.google.code.gson:gson:2.10.1'
    shadow 'io.github.realmangorage:installer:2.0.0'
}

test {
    useJUnitPlatform()
}

shadowJar {
    configurations = [project.configurations.shadow]
}

jar {
    dependsOn configurations.shadow

    from {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        configurations.shadow.collect {
            zipTree(it)
        }
    } {
        exclude "META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA"
    }
}


publishing {
    publications.register("gradleutils", MavenPublication) {
        artifact jar

        groupId = 'io.github.realmangorage'
        artifactId = 'gradleutils'

        pom {
            name = 'MangoBot GradleUtils'
            description = 'The GradleUtils for my Discord Bot Project'
            url = 'https://github.com/MangoRageBot/MangoBot'
            issueManagement {
                system = 'github'
                url = 'https://github.com/MangoRageBot/MangoBot/issues'
            }
            developers {
                developer {
                    id = 'mangorage'
                    name = 'MangoRage'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/releases/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            group "io.github.mangorage"
            credentials {
                username = findProperty("mango.maven.username")
                password = findProperty("mango.maven.password")
            }
        }
    }
}


