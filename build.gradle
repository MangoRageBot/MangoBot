import org.mangorage.mangobotgradle.util.GitVersion

buildscript {
    repositories {
        gradlePluginPortal()
        mavenLocal()
        maven {
            url = "https://maven.minecraftforge.net/"
        }
    }

    dependencies {
        classpath 'org.mangorage:MangoBotGradle:6.0.11'
    }
}

plugins {
    id 'org.gradlex.extra-java-module-info' version '1.12'
}

apply plugin: 'java'
apply plugin: 'MangoBotGradle'
apply plugin: 'maven-publish'

group = 'org.mangorage'
version = GitVersion.getGitVersion().getVersionAsString()

println("Version: " + version)

MangoBotConfig {
    setJarTask(jar)

    addRunConfig {
        it.setName("runDevBot")
        it.addArgs("--dev")
    }
}

extraJavaModuleInfo {
    setDeriveAutomaticModuleNamesFromFileNames(true)
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = 'https://maven.minecraftforge.net/'
    }
    maven {
        url 'https://m2.dv8tion.net/releases'
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url = "https://maven.minecraftforge.net/"
    }
}


dependencies {

    installer('org.mangorage:installer:4.0.13')
    bootstrap("org.mangorage:mangobotbootstrap:1.0.22")

    library('net.dv8tion:JDA:5.3.2')
    library('com.google.code.gson:gson:2.10.1')
    library('net.minecraftforge:eventbus:7.0-beta.1')

    library('org.apache.logging.log4j:log4j-core:+')
    library('org.slf4j:slf4j-simple:2.1.0-alpha1')

    library('org.jetbrains:annotations:26.0.2') {
        version {
            strictly("26.0.2")
        }
    }
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            mangobot_version: version
    ]
    inputs.properties replaceProperties

    filesMatching(['mangobotcore.plugin.json']) {
        expand replaceProperties + [project: project]
    }
}

jar {
    dependsOn configurations.embedLibrary

    from {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        configurations.embedLibrary.collect {
            zipTree(it)
        }
    } {
        exclude "META-INF/*.RSA", "META-INF/*.SF", "META-INF/*.DSA"
    }

    manifest {
        attributes(
                'Main-Class': 'org.mangorage.mangobot.loader.Loader',
                'ModuleMainClass': 'org.mangorage.mangobot.loader.Loader'
        )
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

publishing {
    publications.register("mangobotaddon", MavenPublication) {
        artifactId = 'mangobot'
        artifact jar
        artifact sourcesJar

        pom {
            name = 'MangoBotCore'
            description = 'The Main Plugin For MangoBot'
            url = 'https://github.com/MangoRageBot/MangoBot'
            issueManagement {
                system = 'github'
                url = 'https://github.com/MangoRageBot/MangoBot/issues'
            }
            developers {
                developer {
                    id = 'mangorage'
                    name = 'MangoRage'
                }
            }
            withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.library.getDependencies().each {
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', it.group)
                    dependency.appendNode('artifactId', it.name)
                    dependency.appendNode('version', it.version)
                }
            }
        }
    }

    repositories {
        maven {
            url = "https://maven.minecraftforge.net/"

            credentials {
                username = System.getenv("MAVEN_USER")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}